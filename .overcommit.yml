# Use this file to configure the Overcommit hooks you wish to use. This will
# extend the default configuration defined in:
# https://github.com/sds/overcommit/blob/master/config/default.yml
#
# At the topmost level of this YAML file is a key representing type of hook
# being run (e.g. pre-commit, commit-msg, etc.). Within each type you can
# customize each hook, such as whether to only run it on certain files (via
# `include`), whether to only display output if it fails (via `quiet`), etc.
#
# For a complete list of hooks, see:
# https://github.com/sds/overcommit/tree/master/lib/overcommit/hook
#
# For a complete list of options that you can use to customize hooks, see:
# https://github.com/sds/overcommit#configuration
#
# Uncomment the following lines to make the configuration take effect.

# Hooks that run during `git push`, after remote refs have been updated but
# before any objects have been transferred.
PrePush:
  GitLfs:
    enabled: true
    description: 'Upload files tracked by Git LFS'
    required_executable: 'git-lfs'
    flags: ['pre-push']

# Hooks that run after HEAD changes or a file is explicitly checked out.
PostCheckout:
  GitLfs:
    enabled: true
    description: 'Check status of lockable files tracked by Git LFS'
    required_executable: 'git-lfs'
    flags: ['post-checkout']


# Hooks that run after a commit is created.
PostCommit:
  GitLfs:
    enabled: true
    description: 'Check status of lockable files tracked by Git LFS'
    required_executable: 'git-lfs'
    flags: ['post-commit']

# Hooks that run after `git merge` executes successfully (no merge conflicts).
PostMerge:
  GitLfs:
    enabled: true
    description: 'Check status of lockable files tracked by Git LFS'
    required_executable: 'git-lfs'
    flags: ['post-merge']

# Hooks that are run after `git commit` is executed, before the commit message
# editor is displayed. These hooks are ideal for syntax checkers, linters, and
# other checks that you want to run before you allow a commit object to be
# created.
PreCommit:
  GoFmt:
    enabled: false
#  RuboCop:
#    enabled: true
#    on_warn: fail # Treat all warnings as failures
#
#  TrailingWhitespace:
#    enabled: true
#    exclude:
#      - '**/db/structure.sql' # Ignore trailing whitespace in generated files
#
#PostCheckout:
#  ALL: # Special hook name that customizes all hooks of this type
#    quiet: true # Change all post-checkout hooks to only display output on failure
#
#  IndexTags:
#    enabled: true # Generate a tags file with `ctags` each time HEAD changes
#

# Hooks that are run against every commit message after a user has written it.
# These hooks are useful for enforcing policies on commit messages written for a
# project.
CommitMsg:
  TrailingPeriod:
    enabled: true
    description: 'Check for trailing periods in subject'
    on_warn: fail # Treat all warnings as failures

  TextWidth:
    enabled: true
    description: 'Check text width'
    on_warn: fail # Treat all warnings as failures
    max_subject_width: 50
    min_subject_width: 0
    max_body_width: 72
